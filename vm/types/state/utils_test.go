package state

import (
	"encoding/hex"
	"testing"
)

func TestDecodeBlock(t *testing.T) {
	tests := []struct {
		name    string
		args    string
		wantErr bool
	}{
		{
			name:    "failed - BlockIDFlag: 0",
			args
			wantErr: true,
		},
		{
			name:    "failed - expected ValidatorAddress size to be 20 bytes, got 0 bytes", // BlockIDFlag: types.BlockIDFlagNil,
			args:    "0A81030A04080B10011211746573742D636861696E2D5538746537351802220C08CCF999B20610B08798AA012A480A20B36A211648CC884E0756EBCD822FC9DBDBF2093ED7AD2657659E8B5699C2890F122408011220C0F4664FF5641CE97A9D417DB130F44F391772F908092A76112944181872850A3220B4E6C5385E72E9433F51492791A599620DB572CDC4AF3787D522784DBF92F8203A20A7A02E7CBB627D642622B06B4B51A227CC806382CF10333C84267C014DE307D04220F886C461EEC1C571508C865E60DED596B2560F7461501E9334BA135597AD9C854A20F886C461EEC1C571508C865E60DED596B2560F7461501E9334BA135597AD9C855220048091BC7DDC283F77BFBF91D73C44DA58C3DF8A9CBC867405D8B7F3DAADA22F5A0800000000000000006220E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B8556A20E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B8557214000000000000000000000000000000000000000012170A1571756572795F6B65793D71756572795F76616C75651A0022261A021200220F08031A0B088092B8C398FEFFFFFF01220F08031A0B088092B8C398FEFFFFFF01",
			wantErr: true,
		},
		{
			name:    "success - BlockIDFlag: 1", // BlockIDFlag: types.BlockIDFlagAbsent, fail parse block after it
			args
			wantErr: true,
		},
		{
			name:    "success - BlockIDFlag: 3", // types.BlockIDFlagNil, stuck after block
			args
			wantErr: false,
		},
		{
			name:    "Parse block error after bootstrapping", //  err="proto: Data: wiretype end group for non-group"
			args:    "0A0E0A04080B10011206302E33382E361211746573742D636861696E2D553874653735180122480A20B36A211648CC884E0756EBCD822FC9DBDBF2093ED7AD2657659E8B5699C2890F122408011220C0F4664FF5641CE97A9D417DB130F44F391772F908092A76112944181872850A2A0C08FEFD8AA006108293A2FE0132D2010A470A1427A081B935F841C87EB400A37BFA0E7DDC6897E712220A20877864F9013C73A40B4F24A9F1371FCDC949C3F046EFDCE2181FE9200F837CF1180A20F6FFFFFFFFFFFFFFFF010A3E0A14E64417981307C18EB094B5AFA17DEE331650245012220A2097D5FDF9F8E4781CC37CF19B50CEC0308444EAE24DEFCCCDE7E964E4E628B5E9180A200A12470A1427A081B935F841C87EB400A37BFA0E7DDC6897E712220A20877864F9013C73A40B4F24A9F1371FCDC949C3F046EFDCE2181FE9200F837CF1180A20F6FFFFFFFFFFFFFFFF013ABA010A3C0A1427A081B935F841C87EB400A37BFA0E7DDC6897E712220A20877864F9013C73A40B4F24A9F1371FCDC949C3F046EFDCE2181FE9200F837CF1180A0A3C0A14E64417981307C18EB094B5AFA17DEE331650245012220A2097D5FDF9F8E4781CC37CF19B50CEC0308444EAE24DEFCCCDE7E964E4E628B5E9180A123C0A14E64417981307C18EB094B5AFA17DEE331650245012220A2097D5FDF9F8E4781CC37CF19B50CEC0308444EAE24DEFCCCDE7E964E4E628B5E9180A42D2010A470A1427A081B935F841C87EB400A37BFA0E7DDC6897E712220A20877864F9013C73A40B4F24A9F1371FCDC949C3F046EFDCE2181FE9200F837CF1180A20F6FFFFFFFFFFFFFFFF010A3E0A14E64417981307C18EB094B5AFA17DEE331650245012220A2097D5FDF9F8E4781CC37CF19B50CEC0308444EAE24DEFCCCDE7E964E4E628B5E9180A200A12470A1427A081B935F841C87EB400A37BFA0E7DDC6897E712220A20877864F9013C73A40B4F24A9F1371FCDC949C3F046EFDCE2181FE9200F837CF1180A20F6FFFFFFFFFFFFFFFF01480152330A10088080C00A10FFFFFFFFFFFFFFFFFF01120E08A08D0612040880C60A188080401A0B0A09736563703235366B3122002A0058016220E3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B8556A0800000000000000007001",
			wantErr: true,
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			data, err := hex.DecodeString(tt.args)
			if err != nil {
				t.Fatalf("Failed to decode hex string: %v", err)
			}
			blk, err := DecodeBlock(data)
			if (err != nil) != tt.wantErr {
				t.Errorf("DecodeBlock() error = %v, wantErr %v", err, tt.wantErr)
			}

			if !tt.wantErr && blk == nil {
				t.Errorf("DecodeBlock() returned nil block")
			}
		})
	}
}
